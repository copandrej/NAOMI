configuration:
  database:
    username: postgres
    host: postgres.flyte.svc.cluster.local
    dbname: flyteadmin 
  storage:
    type: minio
    metadataContainer: flyte #This is the default bucket created with Minio. Controlled by the MINIO_DEFAULT_BUCKETS env var in the local-flyte-resources.yaml manifest
    userDataContainer: flyte
    provider: s3
    providerConfig:
      s3:
        region: "us-east-1" #Irrelevant for local but still needed
        authType: "accesskey"
        endpoint: "http://193.2.205.27:30085"
        accessKey: "minio"
        secretKey: "miniostorage" #If you need to change this parameters, refer to the local-flyte-resources.yaml manifest and adjust the MINIO_ROOT_PASSWORD env var
        disableSSL: "true"
        secure: "false"

  inlineSecretRef: flyte-binary-inline-config-secret  
  inline:
    plugins:
      k8s:
        inject-finalizer: true
        default-env-vars:
          - FLYTE_AWS_ENDPOINT: "http://193.2.205.27:30085"
          - FLYTE_AWS_ACCESS_KEY_ID: "minio"
          - FLYTE_AWS_SECRET_ACCESS_KEY: "miniostorage" #Use the same value as the MINIO_ROOT_PASSWORD
    task_resources:
      defaults: 
        cpu: 1000m
        memory: 1Gi #change default requested resources and limits to fit your needs
      limits:
        memory: 2Gi
    storage:
      cache:
        max_size_mbs: 100
        target_gc_percent: 100

serviceAccount:
  create: true

# deployment Configure Flyte deployment specification
deployment:
  # extraPodSpec Specify additional configuration for Flyte pod
  # This can be used for adding affinity, tolerations, hostNetwork, etc.
  extraPodSpec:
    nodeSelector:
      kubernetes.io/arch: "amd64"

# Uncomment for ray integration - doesnt work right now
#  inline:
#   tasks:
#     task-plugins:
#       enabled-plugins:
#         - container
#         - sidecar
#         - k8s-array
#         - ray
#       default-for-task-types:
#         - container: container
#         - container_array: k8s-array
#         - ray: ray
#
#rbac:
#  extraRules:
#    apiGroups:
#      - "ray.io"
#    resources:
#      - rayjob
#    verbs:
#      - create
#      - get
#      - list
#      - patch
#      - update