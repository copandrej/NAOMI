apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio
spec:
  storageClassName: microk8s-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
  labels:
    app.kubernetes.io/name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
    spec:
      nodeSelector:
        kubernetes.io/arch: "amd64"
      containers:
      - image: "bitnami/minio:2023.7.18-debian-11-r2"
        imagePullPolicy: "IfNotPresent"
        name: minio
        env:
          - name: MINIO_ROOT_USER
            value: minio
          - name: MINIO_ROOT_PASSWORD
            value: miniostorage
          - name: MINIO_DEFAULT_BUCKETS
            value: "zen, my-s3-bucket"
        ports:
        - containerPort: 9000
          name: minio
        - containerPort: 9001
          name: minio-console
        resources:
          limits:
            cpu: 1
            memory: 1G
          requests:
            cpu: 1
            memory: 1G
        volumeMounts:
        - name: minio-storage
          mountPath: /data
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
  labels:
    app.kubernetes.io/name: minio
spec:
  type: NodePort
  ports:
  - name: minio
    nodePort: 30085
    port: 9000
    protocol: TCP
    targetPort: minio
  - name: minio-console
    nodePort: 30090
    port: 9001
    protocol: TCP
    targetPort: minio-console
  selector:
    app.kubernetes.io/name: minio
