apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # Any characters captured by (.*) will be assigned to the placeholder $1, which is then used as a parameter in the rewrite-target annotation
    # For example, the ingress definition above will result in the following rewrites:
    # $IP/$CLUSTER_NAME/ rewrites to $IP/ ($1 maps to nothing)
    # $IP/$CLUSTER_NAME/#/actors rewrites to $IP/#/actors ($1 maps to #/actors)
    # $IP/$CLUSTER_NAME/#/node rewrites to $IP/#/node ($1 maps to #/node)
  name: ray-ingress-head
spec:
  ingressClassName: nginx # This should be algined with the ingress-class of the ingress controller
  rules:
  - http:
      paths:
      - backend:
          service:
            name: ray-serve-head-svc # service name should be the same as head service
            port: # port number should match the port specified for dashboard in the RayCluster setting above
              number: 8265

        path: /ray/(.*) # (.*) is regex
        pathType: Exact # Matches the URL path exactly and with case sensitivity.
      - backend:
          service:
            name: ray-serve-serve-svc
            port:
              number: 8000
        path: /ray-api/(.*)
        pathType: Exact
---
apiVersion: v1
kind: Service
metadata:
  name: ray-serve-head-svc-nodeport
spec:
  type: NodePort
  selector:
    app.kubernetes.io/created-by: kuberay-operator
    app.kubernetes.io/name: kuberay
    ray.io/node-type: head
  ports:
    - protocol: TCP
      port: 10001
      targetPort: 10001
      nodePort: 30001 # replace with the desired NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-ip
data:
  #  get ip from values, these are helm chart templates
  GRAFANA_IP: "http://{{ .Values.general.ip }}:30000"
